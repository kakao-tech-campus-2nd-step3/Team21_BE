name: weekly 브랜치 PR에 대한 CI 테스트

on:
  pull_request:
    branches:
      - 'weekly/**'

jobs:
  ci:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: 프로젝트 코드를 CI 서버로 옮겨오기
        uses: actions/checkout@v4

      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: FCM 서비스 계정 키 파일 생성
        run: |
          echo '${{ secrets.FCM_SERVICE_ACCOUNT_KEY }}' > ./src/main/resources/everymoment.json

      - name: AWS S3 관련 정보를 설정 파일에 주입
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws.s3.accessKey: ${{ secrets.AWS_S3_ACCESS_KEY }}
          aws.s3.secretKey: ${{ secrets.AWS_S3_SECRET_KEY }}
          jwt.secret: ${{ secrets.JWT_SECRET }}

      - name: 빌드 테스트 수행
        run: |
          chmod +x ./gradlew
          ./gradlew clean build --build-cache --stacktrace

      - name: 테스트 수행 결과 보고
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: 테스트 실패 시, 실패한 코드 라인에 코멘트 자동 등록
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}

      - name: JaCoCo 테스트 커버리지 리포트 업로드
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: jacoco-report
            path: '**/build/reports/jacoco/'

      - name: JaCoCo 테스트 커버리지 결과를 PR에 코멘트로 등록
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ github.token }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: '📊 테스트 커버리지 리포트'
